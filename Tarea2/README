# Tarea 2
## Copilacion
Para copilar deben hacer uso del siguiente comando
- g++ -std=c++11 main.cpp quicksort.cpp bucketsort.cpp -o ./a.out
Para luego ejecutarlo con lo siguiente
- ./a.out

## Para codigo de 4 threads:
- g++ -std=c++11 mainPrueba.cpp quicksort.cpp bucketsort.cpp -o ./a.out
Se ejecuta de igual modo, advertencia, registre hasta 7 gbs de uso de memoria


## Para codigo de n threads
Recomiendo probar los valores, en especial hilosPermitidos el cual es el que ajusta la cantidad de hilos que se usaran.
Asuma que para hilosPermitidos ocupa 7,5 Gb
- g++ multiThreadAjustable.cpp quicksort.cpp bucketsort.cpp -o ./a.out

## Only RadixSort
- g++ multiThreadOnlyRadix.cpp quicksort.cpp bucketsort.cpp -o ./a.out


## para la version que solo busca el KOptimo:
### Compilacion:
- g++ SearchKOptimo.cpp quicksort.cpp bucketsort.cpp -o ./a.out
### Lanzamiento:
- ./a.out